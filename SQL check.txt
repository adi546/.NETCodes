-- ==============================================
-- COMPLETE ENVIRONMENT COMPARISON SCRIPT
-- Run this in both Quality and Production
-- ==============================================

-- 1. DATABASE BASIC INFO
SELECT 'DATABASE_INFO' AS Category,
    DB_NAME() AS DatabaseName,
    CONVERT(NVARCHAR(100), DATABASEPROPERTYEX(DB_NAME(), 'ServiceObjective')) AS ServiceTier,
    CONVERT(NVARCHAR(100), DATABASEPROPERTYEX(DB_NAME(), 'Edition')) AS Edition,
    CONVERT(NVARCHAR(100), DATABASEPROPERTYEX(DB_NAME(), 'Collation')) AS DatabaseCollation;

-- 2. SQL SERVER VERSION INFO
SELECT 'SQL_VERSION' AS Category,
    @@VERSION AS SQLServerVersion,
    SERVERPROPERTY('ProductVersion') AS ProductVersion,
    SERVERPROPERTY('ProductLevel') AS ProductLevel,
    SERVERPROPERTY('Edition') AS ServerEdition;

-- 3. DATABASE COMPATIBILITY
SELECT 'COMPATIBILITY' AS Category,
    compatibility_level AS CompatibilityLevel,
    CONVERT(NVARCHAR(100), DATABASEPROPERTYEX(DB_NAME(), 'Version')) AS DatabaseVersion
FROM sys.databases 
WHERE name = DB_NAME();

-- 4. QUERY STORE STATUS
SELECT 'QUERY_STORE' AS Category,
    desired_state_desc AS DesiredState,
    actual_state_desc AS ActualState,
    readonly_reason AS ReadOnlyReason,
    current_storage_size_mb AS CurrentStorageMB,
    max_storage_size_mb AS MaxStorageMB
FROM sys.database_query_store_options;

-- 5. USERS TABLE INFO
SELECT 'USERS_TABLE' AS Category,
    COUNT(*) AS TotalUsers,
    COUNT(CASE WHEN Email LIKE '%@gmail.com' THEN 1 END) AS GmailUsers,
    COUNT(CASE WHEN Email LIKE 'AGN%' THEN 1 END) AS AGNUsers
FROM Users;

-- 6. EMAIL COLUMN INFO
SELECT 'EMAIL_COLUMN' AS Category,
    c.name AS ColumnName,
    t.name AS DataType,
    c.max_length AS MaxLength,
    c.is_nullable AS IsNullable,
    c.collation_name AS ColumnCollation
FROM sys.columns c
JOIN sys.types t ON c.user_type_id = t.user_type_id
WHERE c.object_id = OBJECT_ID('Users') AND c.name = 'Email';

-- 7. INDEXES ON EMAIL
SELECT 'EMAIL_INDEXES' AS Category,
    i.name AS IndexName,
    i.type_desc AS IndexType,
    i.is_unique AS IsUnique,
    i.is_primary_key AS IsPrimaryKey
FROM sys.indexes i
JOIN sys.index_columns ic ON i.object_id = ic.object_id AND i.index_id = ic.index_id
JOIN sys.columns c ON ic.object_id = c.object_id AND ic.column_id = c.column_id
WHERE OBJECT_NAME(i.object_id) = 'Users' AND c.name = 'Email';

-- 8. SPECIFIC USER CHECK
SELECT 'SPECIFIC_USER' AS Category,
    UserCode,
    Email,
    LEN(Email) AS EmailLength,
    LEN(LTRIM(RTRIM(Email))) AS TrimmedEmailLength,
    CASE WHEN Email = 'AGNBKBB860@gmail.com' THEN 'EXACT_MATCH' 
         WHEN LOWER(Email) = 'agnbkbb860@gmail.com' THEN 'CASE_INSENSITIVE_MATCH'
         ELSE 'NO_MATCH' END AS MatchType
FROM Users 
WHERE Email LIKE '%AGNBKBB860%' OR UserCode LIKE '%AGNBKBB860%';

-- 9. COLLATION DETAILS
SELECT 'COLLATION_INFO' AS Category,
    CONVERT(NVARCHAR(100), DATABASEPROPERTYEX(DB_NAME(), 'Collation')) AS DatabaseCollation,
    COLLATIONPROPERTY(CONVERT(NVARCHAR(100), DATABASEPROPERTYEX(DB_NAME(), 'Collation')), 'LCID') AS LCID,
    COLLATIONPROPERTY(CONVERT(NVARCHAR(100), DATABASEPROPERTYEX(DB_NAME(), 'Collation')), 'ComparisonStyle') AS ComparisonStyle;